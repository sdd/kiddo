name: Pre-release

on:
  push:
    branches: [ master ]

jobs:
  check_master:
    name: Check Master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get latest stable Rust version
        run: |
          echo "LATEST_STABLE_RUST_VERSION=$(gh api /repos/rust-lang/rust/releases --jq ".[0].tag_name")" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Toolchain
        uses: actions/cache@v3
        with:
          path: ~/.rustup
          key: toolchain-x86-64-${{ env.LATEST_STABLE_RUST_VERSION }}

      - name: Install `stable` Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt,clippy

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

      - name: Clippy
        uses: LoliGothick/clippy-check@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          options: --all-features --no-deps

      - name: Check Rustdoc Links
        run: RUSTDOCFLAGS="--deny broken_intra_doc_links" cargo doc --verbose --workspace --no-deps --document-private-items

      - name: Install cargo-hack
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-hack
          version: "^0.5"

      - name: Cargo check all targets and features
        run: cargo hack check --workspace --each-feature --all-targets

      - name: Cargo Test
        run: cargo test --workspace --all-features --lib --bins --tests --examples

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  make-release-pr:
    permissions:
      id-token: write # Enable OIDC
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run bumper
        id: bumper
        uses: tomerfi/version-bumper-action@1.0.0

      - name: Get latest stable Rust version
        run: |
          echo "LATEST_STABLE_RUST_VERSION=$(gh api /repos/rust-lang/rust/releases --jq ".[0].tag_name")" >> "$GITHUB_ENV"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Toolchain
        uses: actions/cache@v3
        with:
          path: ~/.rustup
          key: toolchain-x86-64-${{ env.LATEST_STABLE_RUST_VERSION }}

      - name: Install `stable` Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt,clippy

      - uses: chainguard-dev/actions/setup-gitsign@main

      - name: Install cargo-release
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-release

      - uses: cargo-bins/release-pr@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.bumper.outputs.new_version }}
          pr-draft: true
          pr-merge-strategy: rebase
          pr-release-notes: true

